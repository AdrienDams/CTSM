===============================================================
Tag name: ctsm5.1.dev131
Originator(s): samrabin (Sam Rabin,UCAR/TSS)
Date: Mon Jul 17 13:58:49 MDT 2023
One-line Summary: Enable prescribed crop calendars.

Purpose and description of changes
----------------------------------

This tag introduces the ability to prescribe crop sowing dates
and/or maturity requirements.

Significant changes to scientifically-supported configurations
--------------------------------------------------------------

Does this tag change answers significantly for any of the following physics configurations?
(Details of any changes will be given in the "Answer changes" section below.)

    [Put an [X] in the box for any configuration with significant answer changes.]

[ ] clm5_1

[ ] clm5_0

[ ] ctsm5_0-nwp

[???] clm4_5

Bugs fixed or introduced
------------------------

CTSM issues fixed (include CTSM Issue #):
   Resolves #281  -- Clean up CropPhenology logic
   Resolves #519  -- Read in crop planting and harvest dates
   Fixes    #2042 -- Issue running SystemTests due to "conda activate" error

   Some on  #1649 -- Additional "annual" (per growing season) crop outputs

Known bugs found since the previous tag (include issue #):
   None???

Notes of particular relevance for users
---------------------------------------

Caveats for users:
    Untested but theoretically possible:
    * Time-varying inputs
    * Running at any resolution other than one matching the crop calendar inputs

Changes to CTSM's user interface (e.g., new/renamed XML or namelist variables):
    Adds optional namelist variables:
    * stream_fldfilename_sdate: Filename of input stream data for sowing dates
    * stream_fldfilename_cultivar_gdds: Filename of input stream data for cultivar growing degree-day targets
    * stream_meshfile_cropcal: Filename of input stream data for crop calendar inputs
    * stream_year_first_cropcal: First year to loop over for crop calendar data
    * stream_year_last_cropcal: Last year to loop over for crop calendar data
    * model_year_align_cropcal: Simulation year that aligns with stream_year_first_cropcal value
    * generate_crop_gdds: Set to .true. in order to override crop harvesting logic and to instead harvest the day before the next sowing date. Used to generate growing-degree day outputs that can be used with an external script to generate new GDD requirement ("cultivar") files.
    * use_mxmat: Set to .false. in order to ignore crop PFT parameter for maximum growing season length (mxmat). Must be set to .false. when generate_crop_gdds is .true.

Notes of particular relevance for developers:                                                                                                                 ---------------------------------------------

Changes to tests or testing:
    * Adds RXCROPMATURITY SystemTest, with an example added to ctsm_sci test suite.
    * Removes 12 MCT tests from testlist_clm.xml, as discussed in CTSM SE standup 2023-06-26.

Testing summary:
----------------

 [PASS means all tests PASS; OK means tests PASS other than expected fails.]

  build-namelist tests (if CLMBuildNamelist.pm has changed):

    cheyenne - PASS

  regular tests (aux_clm: https://github.com/ESCOMP/CTSM/wiki/System-Testing-Guide#pre-merge-system-testing):

    cheyenne ---- OK
    izumi ------- OK

  python testing (if python code has changed; see instructions in python/README.md; document testing done):

    cheyenne - PASS

Answer changes
--------------

Changes answers relative to baseline: YES for Clm45BgcCrop compsets only

  Summarize any changes to answers, i.e.,
    - what code configurations: Clm45BgcCrop
    - what platforms/compilers: Cheyenne intel and gnu, Izumi intel and nag
    - nature of change (roundoff; larger than roundoff/same climate; new climate): ???

   If this tag changes climate describe the run(s) done to evaluate the new
   climate (put details of the simulations in the experiment database)

      ???

   5 tests in aux_clm showed true DIFFs (i.e., not just field list differences / new output files):
     - SMS_D_Ly6_Mmpi-serial.1x1_smallvilleIA.IHistClm45BgcCropQianRs.izumi_intel.clm-cropMonthOutput
     - ERP_D_P36x2_Ld3.f10_f10_mg37.I2000Clm45BgcCrop.cheyenne_gnu.clm-no_subgrid_fluxes
     - LGRAIN2_Ly2_P72x1.f10_f10_mg37.I1850Clm45BgcCrop.cheyenne_gnu.clm-ciso--clm-cropMonthOutput
     - ERS_Ly5_P72x1.f10_f10_mg37.IHistClm45BgcCrop.cheyenne_intel.clm-cropMonthOutput
     - SMS_D_Ld1_P48x1.f10_f10_mg37.I2000Clm45BgcCrop.izumi_nag.clm-oldhyd
   
   The first four were likely due to an order-of-operations change in CNOffsetLitterfall(), as they resolve with the patch at
   https://github.com/samsrabin/CTSM/commit/c30320cbd6583bccbcc290ffe536e8500e6ec358

   The last is resolved with an additional patch that removes all my changes to CNOffsetLitterfall()---changes which *should* only
   affect new diagnostic variables:
   https://github.com/samsrabin/CTSM/commit/e025f555e74584c63d50f27c4df38326fa64bc4f

Other details
-------------
List any externals directories updated (cime, rtm, mosart, cism, fates, etc.): cime
    cime: cime6.0.108 -> cime6.0.136

Pull Requests that document the changes (include PR ids):
    https://github.com/ESCOMP/CTSM/pull/1863

===============================================================
