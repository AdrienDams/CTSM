[modify_fsurdat_basic_options]

# ------------------------------------------------------------------------
# .cfg file with inputs for fsurdat_modifier.
#
# This configuration file, when used in fsurdat_modifier, will create a
# version of the input fsurdat file that is 100% cropland with area evenly
# split among all crop PFTs.
# ------------------------------------------------------------------------

### Skipping input/output file paths, as these should be specified in
### command-line call of fsurdat_modifier.
# Path and name of input surface dataset (str)
### fsurdat_in =
# Path and name of output surface dataset (str)
### fsurdat_out =

# We want all existing values in fsurdat to persist except the ones
# pertaining to land unit and PFT fractions. Thus, we set idealized = False.
idealized = False

# Process the optional section that handles modifying subgrid fractions
process_subgrid_section = True

# Process the optional section that handles modifying an arbitrary list of variables
process_var_list_section = False

# Boundaries of user-defined rectangle to apply changes (float)
# If lat_1 > lat_2, the code creates two rectangles, one in the north and
# one in the south.
# If lon_1 > lon_2, the rectangle wraps around the 0-degree meridian.
# Alternatively, user may specify a custom area in a .nc landmask_file
# below. If set, this will override the lat/lon settings.
# -----------------------------------
# southernmost latitude for rectangle
lnd_lat_1 = -90
# northernmost latitude for rectangle
lnd_lat_2 = 90
# westernmost longitude for rectangle
lnd_lon_1 = 0
# easternmost longitude for rectangle
lnd_lon_2 = 360
# User-defined mask in a file, as alternative to setting lat/lon values.
# If set, lat_dimname and lon_dimname should likely also be set. IMPORTANT:
# - lat_dimname and lon_dimname may be left UNSET if they match the expected
# default values 'lsmlat' and 'lsmlon'
landmask_file = UNSET
lat_dimname = UNSET
lon_dimname = UNSET

# PFT/CFT to be set to 100% according to user-defined mask.
# We *could* evenly split cropland using dom_pft, but using
# evenly_split_cropland (below) is more robust. Thus, we
# leave dom_pft UNSET.
dom_pft = UNSET

# Evenly split each gridcell's cropland among all crop types (CFTs).
evenly_split_cropland = True

# UNSET with idealized False means leave these values unchanged.
lai = UNSET
sai = UNSET
hgt_top = UNSET
hgt_bot = UNSET
soil_color = UNSET
std_elev = UNSET
max_sat_area = UNSET

# We manually exclude non-vegetation land units (along with NATVEG) below, so set
# include_nonveg to True.
include_nonveg = True


# Section for subgrid_fractions
[modify_fsurdat_subgrid_fractions]
# If subgrid_fractions = True this section will be enabled

# NOTE: PCT_URBAN must be a list of three floats that sum to the total urban area
PCT_URBAN = 0.0 0.0 0.0
PCT_CROP = 100.0
PCT_NATVEG= 0.0
PCT_GLACIER= 0.0
PCT_WETLAND= 0.0
PCT_LAKE = 0.0