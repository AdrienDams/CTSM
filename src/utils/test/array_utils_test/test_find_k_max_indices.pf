module test_find_k_max_indices

  ! Tests of array_utils: find_k_max_indices

  use pfunit_mod
  use array_utils
  use shr_kind_mod , only : r8 => shr_kind_r8

  implicit none

  @TestCase
  type, extends(TestCase) :: TestFindKMax
   contains
     procedure :: setUp
     procedure :: tearDown
  end type TestFindKMax

  real(r8), parameter :: tol = 1.e-13_r8

contains

  subroutine setUp(this)
    class(TestFindKMax), intent(inout) :: this
  end subroutine setUp

  subroutine tearDown(this)
    class(TestFindKMax), intent(inout) :: this
  end subroutine tearDown

  @Test
  subroutine alreadyInOrder(this)
    class(TestFindKMax), intent(inout) :: this
    integer, allocatable :: max_indices(:)

    call find_k_max_indices( &
         data = [5._r8, 4._r8, 3._r8, 2._r8], &
         lb = 1, &
         k = 3, &
         max_indices = max_indices)

    @assertEqual([1,2,3], max_indices)
  end subroutine alreadyInOrder

  @Test
  subroutine reversed(this)
    class(TestFindKMax), intent(inout) :: this
    integer, allocatable :: max_indices(:)

    call find_k_max_indices( &
         data = [2._r8, 3._r8, 4._r8, 5._r8], &
         lb = 1, &
         k = 3, &
         max_indices = max_indices)

    @assertEqual([4,3,2], max_indices)
  end subroutine reversed

  @Test
  subroutine insertAtLast(this)
    class(TestFindKMax), intent(inout) :: this
    integer, allocatable :: max_indices(:)

    call find_k_max_indices( &
         data = [5._r8, 4._r8, 2._r8, 3._r8], &
         lb = 1, &
         k = 3, &
         max_indices = max_indices)

    @assertEqual([1,2,4], max_indices)
  end subroutine insertAtLast

  @Test
  subroutine insertAtFirst(this)
    class(TestFindKMax), intent(inout) :: this
    integer, allocatable :: max_indices(:)

    call find_k_max_indices( &
         data = [5._r8, 4._r8, 3._r8, 6._r8], &
         lb = 1, &
         k = 3, &
         max_indices = max_indices)

    @assertEqual([4,1,2], max_indices)
  end subroutine insertAtFirst

  @Test
  subroutine insertAtMiddle(this)
    class(TestFindKMax), intent(inout) :: this
    integer, allocatable :: max_indices(:)

    call find_k_max_indices( &
         data = [5._r8, 3._r8, 2._r8, 4._r8], &
         lb = 1, &
         k = 3, &
         max_indices = max_indices)

    @assertEqual([1,4,2], max_indices)
  end subroutine insertAtMiddle

  @Test
  subroutine lbNot1(this)
    class(TestFindKMax), intent(inout) :: this
    integer, allocatable :: max_indices(:)

    call find_k_max_indices( &
         data = [2._r8, 3._r8, 4._r8, 5._r8], &
         lb = 2, &
         k = 3, &
         max_indices = max_indices)

    @assertEqual([5,4,3], max_indices)
  end subroutine lbNot1

end module test_find_k_max_indices
